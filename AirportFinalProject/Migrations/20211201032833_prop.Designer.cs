// <auto-generated />
using System;
using Airport.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportFinalProject.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20211201032833_prop")]
    partial class prop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Airport.Models.Company", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = "Ori",
                            CompanyLogo = "Logo",
                            CompanyName = "Iberia"
                        });
                });

            modelBuilder.Entity("Airport.Models.Flight", b =>
                {
                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlightNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeparture")
                        .HasColumnType("bit");

                    b.Property<int>("StationId")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StationId")
                        .IsUnique();

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Airport.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlightId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("Stations");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            StationName = "Garage"
                        },
                        new
                        {
                            StationId = 2,
                            StationName = "Last Preperation"
                        },
                        new
                        {
                            StationId = 3,
                            StationName = "Terminal"
                        },
                        new
                        {
                            StationId = 4,
                            StationName = "Taking off"
                        },
                        new
                        {
                            StationId = 5,
                            StationName = "Done"
                        },
                        new
                        {
                            StationId = 6,
                            StationName = "Landing"
                        },
                        new
                        {
                            StationId = 7,
                            StationName = "About to land"
                        },
                        new
                        {
                            StationId = 8,
                            StationName = "preparing to land"
                        },
                        new
                        {
                            StationId = 9,
                            StationName = "On Air"
                        });
                });

            modelBuilder.Entity("Airport.Models.Flight", b =>
                {
                    b.HasOne("Airport.Models.Company", "Company")
                        .WithMany("Flights")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Airport.Models.Station", "Station")
                        .WithOne("Flight")
                        .HasForeignKey("Airport.Models.Flight", "StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("Airport.Models.Company", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("Airport.Models.Station", b =>
                {
                    b.Navigation("Flight");
                });
#pragma warning restore 612, 618
        }
    }
}
